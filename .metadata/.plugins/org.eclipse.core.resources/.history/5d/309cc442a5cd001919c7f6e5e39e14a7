package demo;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.*;
import java.util.*;
class node{
	
	String name;
	double distance;	
	double xcod;
	double ycod;
	int line;
	String type;
	node(int line,String name,double xcod,double ycod,String type){
		this.line=line;
		this.name=name;
		this.xcod=xcod;
		this.ycod=ycod;
		this.type=type;
		distance=0;
		
	}
}
class graph{
	Map<String,List<node>> adjvertices;
   
	
   graph(){
	   
	   adjvertices=new HashMap<String,List<node>>();
   }
   void addNode(String a) {
	    adjvertices.putIfAbsent(a, new ArrayList<>());
	}

	 double deg2rad( double deg) {
	   return deg * (Math.PI/180);
	 }
   void addEdge(node source,node destination ) {
           double lat1=source.xcod;
           double lon1=source.ycod;
           double lat2=destination.xcod;
           double lon2=destination.ycod;
		   int R = 6371; // Radius of the earth in km
		   double dLat = deg2rad(lat2-lat1);  // deg2rad below
		   double dLon = deg2rad(lon2-lon1); 
		   double a = 
		     Math.sin(dLat/2) * Math.sin(dLat/2) +
		     Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * 
		     Math.sin(dLon/2) * Math.sin(dLon/2)
		     ; 
		   double c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
		   double d = R * c; // Distance in km
		  destination.distance=d;
	   adjvertices.get(source.name).add(destination);
   }
}


public class mysqlaccess {
	
	public void abc(){
		graph g=new graph();
		String sql="SELECT miniproject.brts.bname,miniproject.brts.bxcod,miniproject.brts.bycod,miniproject.brtsroutes.blid,miniproject.brtsroutes.type FROM miniproject.brtsroutes,miniproject.brts where miniproject.brtsroutes.SBID=miniproject.brts.bid or miniproject.brtsroutes.DBID=miniproject.brts.bid LIMIT 0, 1000";
		String url="jdbc:mysql://localhost:3306/miniproject";
		String username="root";
		String pwrd="Mehta1010";
	try{
	Class.forName("com.mysql.jdbc.Driver");
	Connection con=DriverManager.getConnection(url,username,pwrd);
	PreparedStatement st = con.prepareStatement(sql);
   ResultSet rs=st.executeQuery();
   while(rs.next()) {
	 
	  rs.next();
	  System.out.println(rs.getString(1)+" "+rs.getDouble(2)+" "+rs.getDouble(3)+" "+rs.getInt(4));
   }
  rs.close();
  st.close();
  con.close();
	

	}
	catch(Exception e)
	{
	e.printStackTrace();
	}
	}
	//jdbc:mysql://127.0.0.1:3306/?user=root
}
